<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ranyk.mybatis_ch01.dao.LoginuserDao">

    <resultMap id="BaseResultMap" type="com.ranyk.mybatis_ch01.entity.Loginuser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="effective" jdbcType="INTEGER" property="effective"/>
    </resultMap>
    <cache  />

    <sql id="Base_Column_List">
        id, username, `password`, effective
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
                <include refid="Base_Column_List"/>
        from
                loginuser
        where
                id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByLoginuser" parameterType="com.ranyk.mybatis_ch01.entity.Loginuser" resultType="com.ranyk.mybatis_ch01.entity.Loginuser">
        select
                <include refid="Base_Column_List"/>
        from
                loginuser
        <where>
            <trim suffixOverrides="AND">
                <if  test="id != null and id != ''">
                    id = #{id} AND
                </if>
                <if test="username != null and username != ''">
                    username = ${username} AND
                </if>
                <if test="password != null and password != ''">
                    `password` = ${password} AND
                </if>
                <if test="effective != null and effective != ''">
                    effective = #{effective} AND
                </if>
            </trim>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from
                loginuser
        where
                id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ranyk.mybatis_ch01.entity.Loginuser"
            useGeneratedKeys="true">
        insert into loginuser (username, `password`, effective)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{effective,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ranyk.mybatis_ch01.entity.Loginuser"
            useGeneratedKeys="true">
        insert into loginuser
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="effective != null">
                effective,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="effective != null">
                #{effective,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ranyk.mybatis_ch01.entity.Loginuser">
        update loginuser
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="effective != null">
                effective = #{effective,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ranyk.mybatis_ch01.entity.Loginuser">
        update loginuser
        set username   = #{username,jdbcType=VARCHAR},
            `password` = #{password,jdbcType=VARCHAR},
            effective  = #{effective,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>